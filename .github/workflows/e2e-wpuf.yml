name: Playwright tests/e2e

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 1 * * *"  # Run workflow at 8:00 AM UTC +6 every day


  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest    
    
    steps:
      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
      
      # Checkout WPUF Lite
      - name: Checkout WPUF Lite
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      # Composer & NPM install + build (WPUF Lite)
      - name: Install wpuf-lite dependencies
        run: |
          composer install --no-dev --prefer-dist
          composer dump-autoload -o
          npm install
          grunt release --force

      # Clone WPUF Pro
      - name: Checkout WPUF-pro
        uses: actions/checkout@v4
        with:
          repository: weDevsOfficial/wpuf-pro
          token: ${{ secrets.ACCESS_TOKEN }}
          path: 'plugins/wpuf-pro'
          ref: 'develop'

      # Composer & NPM install + build (WPUF Pro)
      - name: Install wpuf-pro dependencies
        run: |
          cd plugins/wpuf-pro
          composer install --no-dev --prefer-dist
          composer dump-autoload -o
          npm install --legacy-peer-deps
          grunt
          

      # Install test dependencies
      - name: Install E2E test deps
        working-directory: tests/e2e
        run: npm ci

      # Start WordPress via Docker
      - name: Setup WordPress (Docker Compose)
        working-directory: tests/e2e
        run: ./setup-wordpress.sh

      # Get Playwright version for cache key
      - name: Get Playwright version
        id: playwright-version
        run: |
          cd tests/e2e
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq -r '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> "$GITHUB_ENV"

      # Cache Playwright binaries
      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Install Playwright browser binaries & OS dependencies
      - name: Install Playwright browser binaries & OS dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          cd tests/e2e
          npx playwright install chromium --with-deps

      # Run Playwright tests
      - name: Run Playwright tests/e2e
        run: |
          cd tests/e2e
          npx playwright test e2eMain.spec.ts --project=chromium
        env:
          BASE_URL: http://localhost:8888
          CI: true
          ADMIN_USERNAME: admin
          ADMIN_PASSWORD: admin

      # Archive test artifacts
      - name: Archive playwright artifacts (screenshots, HTML snapshots, videos)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report
          if-no-files-found: ignore
          retention-days: 3

      # Publish HTML report to GH Pages
      - name: Publish HTML report to GH Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: tests/e2e/playwright-report
