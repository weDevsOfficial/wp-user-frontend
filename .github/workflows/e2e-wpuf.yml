name: Playwright tests/e2e

on:
  workflow_dispatch:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest    

    steps:
      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"

      # Checkout testing repo
      - name: Checkout testing repo
        id: clone-wpuf-lite
        uses: actions/checkout@v4

      # Use Node.js 18
      - name: Use desired version of NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      # Composer install and build (WPUF-lite)
      - name: Composer install and build (WPUF-lite)
        run: |
          composer install --no-dev --prefer-dist
          composer dump-autoload -o

      # Npm install and build (WPUF-lite) - for plugin
      - name: Npm install and build (WPUF-lite)
        run: |
          npm install
          grunt release

      # ✅ Setup WordPress in the ROOT directory
      - name: Setup WordPress
        run: npm run wp-env start

      # Install Playwright test dependencies inside tests/e2e
      - name: Install test dependencies (Playwright)
        working-directory: tests/e2e
        run: npm ci

      # Get installed Playwright version (inside tests/e2e)
      - name: Get installed Playwright version
        id: playwright-version
        working-directory: tests/e2e
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq -r '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> "$GITHUB_ENV"

      # Cache Playwright binaries (inside tests/e2e)
      - name: Cache Playwright binaries
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: playwright-${{ runner.os }}-

      # Install Playwright browser binaries inside tests/e2e
      - name: Install Playwright browser binaries & OS dependencies
        working-directory: tests/e2e
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      # ✅ Run Playwright tests inside tests/e2e (WordPress is in root)
      - name: Run Playwright tests/e2e
        working-directory: tests/e2e
        run: npx playwright test e2eMain.spec.ts --project=chromium
        env:
          BASE_URL: ${{ secrets.QA_BASE_URL }}
          CI: true
          ADMIN_USERNAME: ${{ secrets.QA_ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.QA_ADMIN_PASSWORD }}

      # Archive Playwright artifacts (screenshots, HTML snapshots, videos)
      - name: Archive Playwright artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/test-results
          if-no-files-found: ignore
          retention-days: 3

      # Output Test Results URL
      - name: Test results
        if: always()
        run: echo "Test results can be found at https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
