name: Playwright tests/e2e


on:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 1 * * *"  # Run workflow at 8:00 AM UTC +6 every day
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest    
    
    steps:
      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
      
      # Checkout WP-User-Frontend repo
      - name: Checkout testing repo
        uses: actions/checkout@v4

      # Use Node.js 18
      - name: Use desired version of NodeJS
        uses: actions/setup-node@v4
        with:
            node-version: 18
            cache: npm
       
      # Clone wpuf-pro
      - name: Clone wpuf-pro
        id: clone-wpuf-pro
        uses: actions/checkout@v4
        with:
          repository: weDevsOfficial/wpuf-pro
          token: ${{ secrets.ACCESS_TOKEN }}
          path: plugins/wpuf-pro
          ref: develop

      # Build wpuf-pro
      - name: Build WPUF-pro
        working-directory: plugins/wpuf-pro
        run: |
          composer i --no-dev -o
          composer update --no-dev -o
          npm i --legacy-peer-deps
          grunt
       
       # Build wp-user-frontend
      - name: Build wpuf-lite
        run: |
          composer i --no-dev -o
          composer update --no-dev -o
          npm i
          grunt release --force
          grunt
            

      # Install test dependencies
      - name: Install test dependencies
        working-directory: tests/e2e
        run: |
            npm ci

      # Start wordpress environment
      - name: Start WordPress Env
        id: wp-env
        if: success()
        uses: nick-fields/retry@v3
        with:
            timeout_minutes: 4
            max_attempts: 2
            retry_on: error
            command: |
              cd tests/e2e
              npm run wp-env start

      # Install Playwright Browsers
      - name: Get installed Playwright version
        id: playwright-version
        working-directory: tests/e2e
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq -r '.dependencies["@playwright/test"].version') echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> "$GITHUB_ENV"


      - name: Cache playwright binaries
        id: playwright-cache
        uses: actions/cache@v4
        with:
            path: |
                ~/.cache/ms-playwright
            key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
            restore-keys: |
                ${{ runner.os }}-playwright-

      - name: Install Playwright browser binaries & OS dependencies
        id: pw-install
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: tests/e2e
        run: |
            npx playwright install chromium --with-deps

      # Run Playwright tests/e2e
      - name: Run Playwright tests/e2e
        if: success() && (github.event_name != 'workflow_dispatch' || ( github.event_name == 'workflow_dispatch' && (github.event.inputs.testsuite == 'E2E' || github.event.inputs.testsuite == 'All')))
        working-directory: tests/e2e
        run: |
          DEBUG=pw:api npx playwright test e2eMain.spec.ts --project=chromium --reporter=html
        continue-on-error: true
      
      - name: Check test results
        if: always()
        working-directory: tests/e2e
        run: |
          ls -la
          echo "Checking playwright-report directory:"
          ls -la playwright-report || echo "No playwright-report directory found"
        
      # Generate Playwright report
      - name: Show Playwright Report
        if: always()
        working-directory: tests/e2e
        run: |
          npx playwright show-report

      # Archive Playwright artifacts (screenshots, HTML snapshots, videos)
      - name: Archive playwright artifacts (screenshots, HTML snapshots, videos)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            tests/e2e/playwright-report
            tests/e2e/test-results
          if-no-files-found: warn
          retention-days: 3

      - name: Publish HTML report to GH Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: tests/e2e/playwright-report