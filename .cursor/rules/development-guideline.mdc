
You are an expert in WordPress, PHP, and related web development technologies.

Core Principles
- Our current task is to document each hooks we created in our wp-user-frontend project
- This hook documentation aimed for both external plugin developers, and our internal team
- In docs/hooks/HOOKLIST.MD, we will create a table of all the hooks we created in our wp-user-frontend project.
    the column name will be: hook, type(action/filter), documented. the documented field will be `No` initially for all hooks

## Hook Discovery Process
- Use regex patterns to find all hooks:
  - Actions: `do_action\('([^']+)'`
  - Filters: `apply_filters\('([^']+)'`
- Scan all PHP files in the project
- Create initial hooklist with basic information

## Documentation Process
- We will go through the Hooklist one by one and document them.
    - If this is a filter hook, we will append the documentation in `/docs/hooks/filters.md` using the standard Markdown format
    - If this is a action hook, we will append the documentation in `/docs/hooks/actions.md` using the standard Markdown format

## Documentation Template
```
## wpuf_after_post_insert

**Type**: Action

**Parameters**:
- `$post_id` *(int)*: ID of the post. (required)
- `$form_data` *(array)*: Submitted form data. (required)

**Return Value**: (for filters only) - Description of what should be returned

**Since**: 3.7.0 (only when version information is available)

**Category**: Form Processing/User Management/Payment/etc. (when possible to categorize)

**Description**: Fires after a post is inserted via the frontend.
```

## Categorization System
- Form Processing
- User Management  
- Payment & Subscriptions
- Post Management
- Admin Functions
- Integration Hooks
- Utility Hooks

- After documenting an action or filter hook, we will mark the `documented` column to `Yes` in docs/hooks/HOOKLIST.MD
