name: WP User Frontend E2E Tests
on:
  workflow_dispatch:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
env:
  BASE_URL: ${{ secrets.QA_BASE_URL }}
  CI: true
  ADMIN_USERNAME: ${{ secrets.QA_ADMIN_USERNAME }}
  ADMIN_PASSWORD: ${{ secrets.QA_ADMIN_PASSWORD }}
  WPUF_PRO_LICENSE_KEY: ${{ secrets.WPUF_PRO_LICENSE_KEY }}
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout Test Suite
        uses: actions/checkout@v4
        with:
          repository: weDevsOfficial/wp-user-frontend
          token: ${{ secrets.ACCESS_TOKEN }}
      
      - name: change directory
        run: cd tests/e2e

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install test dependencies
        run: npm install

      - name: Setup WordPress using wp-env
        run: npm run wp-env:start

      - name: Checkout WPUF Lite
        uses: actions/checkout@v4
        with:
          repository: weDevsOfficial/wp-user-frontend
          token: ${{ secrets.ACCESS_TOKEN }}
          path: wp-content/plugins/wp-user-frontend
          ref: develop

      - name: Install wpuf-lite dependencies
        working-directory: wp-content/plugins/wp-user-frontend
        run: |
          composer install
          composer dump-autoload -o
          npm install
          grunt release --force
          grunt

      - name: Checkout WPUF Pro
        uses: actions/checkout@v4
        with:
          repository: weDevsOfficial/wpuf-pro
          token: ${{ secrets.ACCESS_TOKEN }}
          path: wp-content/plugins/wpuf-pro
          ref: develop

      - name: Install wpuf-pro dependencies
        working-directory: wp-content/plugins/wpuf-pro
        run: |
          composer install
          composer dump-autoload -o
          npm install --legacy-peer-deps
          grunt

      - name: Get installed Playwright version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq -r '.dependencies["@playwright/test"].version')
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> "$GITHUB_ENV"

      - name: Cache Playwright binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: ${{ runner.os }}-playwright-

      - name: Install Playwright browser binaries & dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      - name: Run Playwright tests
        run: npm run test:ci
        continue-on-error: true

      - name: Archive Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/e2e/playwright-report
          if-no-files-found: ignore
          retention-days: 3

      - name: Publish HTML report to GH Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: tests/e2e/playwright-report
          publish_branch: gh-pages
          force_orphan: true