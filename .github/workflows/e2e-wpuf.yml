name: Playwright tests/e2e

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"

      # Checkout WPUF Lite
      - name: Checkout WPUF Lite
        uses: actions/checkout@v4

      # Setup Node.js
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      # Composer & NPM install + build (WPUF Lite)
      - name: Build WPUF Lite
        run: |
          composer install --no-dev --prefer-dist
          composer dump-autoload -o
          npm install
          grunt release --force

      # Clone WPUF Pro
      - name: Checkout WPUF Pro
        uses: actions/checkout@v4
        with:
          repository: weDevsOfficial/wpuf-pro
          token: ${{ secrets.ACCESS_TOKEN }}
          path: 'plugins/wpuf-pro'
          ref: develop

      # Composer & NPM install + build (WPUF Pro)
      - name: Build WPUF Pro
        working-directory: tests/e2e/wp-content/plugins/wpuf-pro
        run: |
          composer install --no-dev --prefer-dist
          composer dump-autoload -o
          npm install --legacy-peer-deps
          grunt

      # Install E2E test dependencies
      - name: Install E2E test deps
        working-directory: tests/e2e
        run: npm ci

      # Start WordPress via Docker
      - name: Setup WordPress (Docker Compose)
        working-directory: tests/e2e
        run: ./setup-wordpress.sh

      # Get Playwright version for cache key
      - name: Get Playwright version
        id: playwright-version
        run: |
          cd tests/e2e
          echo "PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq -r '.dependencies[\"@playwright/test\"].version')" >> $GITHUB_ENV

      # Cache Playwright binaries
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # Install Playwright browsers if cache miss
      - name: Install Playwright Browsers
        if: steps.playwright-version.outputs.cache-hit != 'true'
        working-directory: tests/e2e
        run: npx playwright install chromium --with-deps

      # Run Playwright tests
      - name: Run Playwright tests
        working-directory: tests/e2e
        run: npx playwright test e2eMain.spec.ts --project=chromium
        env:
          BASE_URL: http://localhost:8888
          CI: true
          ADMIN_USERNAME: admin
          ADMIN_PASSWORD: admin

      # Upload test report
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/e2e/playwright-report
          if-no-files-found: ignore
          retention-days: 3

      # Publish report to GH Pages (optional)
      - name: Publish HTML report to GH Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: tests/e2e/playwright-report
